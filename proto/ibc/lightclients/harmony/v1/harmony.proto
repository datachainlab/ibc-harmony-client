syntax = "proto3";
package ibc.lightclients.harmony.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "ibc/core/client/v1/client.proto";

option go_package = "github.com/datachainlab/ibc-harmony-client/modules/light-clients/harmony/types";
option (gogoproto.goproto_getters_all)  = false;

message ClientState {
  uint32 shard_id = 1;
  bytes contract_address = 2;
  uint64 latest_epoch = 3;
  // Beacon committee
  bytes latest_committee = 4;
  // Latest height indicates a height for the shard chain
  ibc.core.client.v1.Height latest_height = 5
      [(gogoproto.nullable) = false];
  google.protobuf.Duration trusting_period = 6
     [(gogoproto.nullable) = false, (gogoproto.stdduration) = true, (gogoproto.moretags) = "yaml:\"trusting_period\""];

  bool frozen = 7;
}

message ConsensusState {
  // Beacon timestamp
  uint64 timestamp = 1;
  bytes root = 2;
}

message EpochState {
  // Beacon committee
  bytes committee = 1;
}

message Header {
  bytes shard_header = 1;
  BeaconHeader beacon_header = 2;
  repeated BeaconHeader epoch_headers = 3
      [(gogoproto.nullable) = false];
  uint32 cross_link_index = 4;
  bytes account_proof = 5;
}

message BeaconHeader {
  bytes header = 1;
  bytes commit_sig = 2;
  bytes commit_bitmap = 3;
}

message Misbehaviour {
  string client_id = 1;
  Header header_1  = 2 [(gogoproto.customname) = "Header1"];
  Header header_2  = 3 [(gogoproto.customname) = "Header2"];
}
